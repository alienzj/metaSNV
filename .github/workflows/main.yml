# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Install dependencies
      run: |
        sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) universe"
        sudo apt-get update
        sudo apt-get install -y build-essential libhts-dev libboost-dev libcurl4-openssl-dev libcairo2-dev python-numpy python-pandas r-base pandoc

    - name: Install R dependencies
      run: |
        sudo R --vanilla <<EOF
        if(!requireNamespace("fpc")){install.packages("fpc", repos="https://cloud.r-project.org/"); library(fpc)}
        if(!requireNamespace("ape")){install.packages("ape", repos="https://cloud.r-project.org/"); library(ape)}
        if(!requireNamespace("getopt")){install.packages("getopt", repos="https://cloud.r-project.org/"); library(getopt)}
        if(!requireNamespace("optparse")){install.packages("optparse", repos="https://cloud.r-project.org/"); library(optparse)}
        if(!requireNamespace("readr")){install.packages("readr", repos="https://cloud.r-project.org/"); library(readr)}
        if(!requireNamespace("dplyr")){install.packages("dplyr", repos="https://cloud.r-project.org/"); library(dplyr)}
        if(!requireNamespace("ggplot2")){install.packages("ggplot2", repos="https://cloud.r-project.org/"); library(ggplot2)}
        if(!requireNamespace("tidyr")){install.packages("tidyr", repos="https://cloud.r-project.org/"); library(tidyr)}
        if(!requireNamespace("gridExtra")){install.packages("gridExtra", repos="https://cloud.r-project.org/"); library(gridExtra)}
        if(!requireNamespace("lemon")){install.packages("lemon", repos="https://cloud.r-project.org/"); library(lemon)}
        if(!requireNamespace("DT")){install.packages("DT", repos="https://cloud.r-project.org/"); library(DT)}
        if(!requireNamespace("cluster")){install.packages("cluster", repos="https://cloud.r-project.org/"); library(cluster)}
        if(!requireNamespace("ggrepel")){install.packages("ggrepel", repos="https://cloud.r-project.org/"); library(ggrepel)}
        if(!requireNamespace("data.table")){install.packages("data.table", repos="https://cloud.r-project.org/"); library(data.table)}
        if(!requireNamespace("kableExtra")){install.packages("kableExtra", repos="https://cloud.r-project.org/"); library(kableExtra)}
        if(!requireNamespace("rmarkdown")){install.packages("rmarkdown", repos="https://cloud.r-project.org/"); library(rmarkdown)}
        if(!requireNamespace("batchtools")){install.packages("batchtools", repos="https://cloud.r-project.org/"); library(batchtools)}
        if(!requireNamespace("coin")){install.packages("coin", repos="https://cloud.r-project.org/"); library(coin)}
        if(!requireNamespace("questionr")){install.packages("questionr", repos="https://cloud.r-project.org/"); library(questionr)}
        if(!requireNamespace("futile.logger")){install.packages("futile.logger", repos="https://cloud.r-project.org/"); library(futile.logger)}
        if(!requireNamespace("BiocManager", quietly=TRUE)){install.packages("BiocManager", repos="https://cloud.r-project.org/")}
        if(!requireNamespace("BiocParallel", quietly=TRUE)){BiocManager::install("BiocParallel")}
        sessionInfo()
        q()
        EOF
        
    - name: Compile
      run: make 

    # Runs a set of commands using the runners shell
    - name: Check help outputs
      run: |
        python metaSNV.py --help
        python metaSNV_post.py --help
        Rscript metaSNV_subpopr.R --help
        
